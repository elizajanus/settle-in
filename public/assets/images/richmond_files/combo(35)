YUI.add("photoList-models",function(t){function e(t){e.superclass.constructor.call(this,t)}t.Models[this.name]=e,t.extend(e,t.FlickrModelRegistry,{langBundles:this.details.langBundles,name:this.name,attributes:{displayType:{readOnly:!0,defaultValue:"photo list"},title:{readOnly:!0,defaultFn:function(t){return this.intlMessage({intlName:"models.PHOTO_LIST"})}},url:{readOnly:!0,defaultFn:function(t){return""}},urlSuffix:{readOnly:!0,defaultFn:function(t){return"photolist-"+t}},photoContextList:{isListProxy:!0,contextFetch:{listFetcher:t.ListFetchers["flickr-photoList-getContext"],listItemIdField:"photoId"}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-photoList-getContext-fetcher"],langBundles:["models"]});YUI.add("flickr-photoList-getContext-fetcher",function(e,o){"use strict";e.namespace("ListFetchers")["flickr-photoList-getContext"]={run:function(t,s){var r=this;return e.Promise.all([s.callAPI("flickr.photolist.getContext",this._processParams(t),!0),s.getModelRegistry("photoList-models"),s.getModelRegistry("photo-models"),s.getModelRegistry("person-models"),s.getModelRegistry("photo-engagement-models"),s.getModelRegistry("photo-stats-models")]).then(function(e){return r._processResponse(e,t)},function(e){throw 1===e.code&&"Photo not in list"===e.message&&(e.notInContext=!0),e}).then(null,e.FetcherErrorLogger(o))},_processParams:function(o){return{photo_id:o.photoId,photolist_id:o.id,num_prev:o.numPrev,num_next:o.numNext,extras:e.APIHelper.request.getRebootPhotoExtras()}},_processResponse:function(o,t){var s,r,n,p,i,h,l=o[0],a=o[1],d=o[2],g=o[3],u=o[4],m=o[5],c=[],x=[],y=d.proxy(t.photoId),M=[];return r=l.prevphotos,s=l.nextphotos,x=e.APIHelper.response.parsePhotos({photos:s.photo,personModelRegistry:g,photoModelRegistry:d,photoEngagementModelRegistry:u,photoStatsModelRegistry:m}),c=e.APIHelper.response.parsePhotos({photos:r.photo,personModelRegistry:g,photoModelRegistry:d,photoEngagementModelRegistry:u,photoStatsModelRegistry:m}),h=a.getValue(t.id,"photoContextList"),p=!!h.hasMinBoundary&&h.hasMinBoundary(),i=!!h.hasMaxBoundary&&h.hasMaxBoundary(),n=h.getList(),M=e.APIHelper.response.addOrReplaceListByContext({model:y,next:x,prev:c.reverse(),current:n,hasMin:p,hasMax:i,numNext:t.numNext,numPrev:t.numPrev}),a.setValue(t.id,"photoContextList",M),{next:x,previous:c.reverse()}}}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["photoList-models","photo-models","photo-engagement-models","photo-stats-models"]});